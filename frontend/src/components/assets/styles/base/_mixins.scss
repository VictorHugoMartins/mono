@import "~/assets/styles/base/variables";

@mixin desktop($width-range: "min") {
  @if $width-range =="min" {
    @media screen and (min-width: $width-extralarge) {
      @content;
    }
  }

  @else {
    @media screen and (max-width: $width-extralarge) {
      @content;
    }
  }
}

@mixin halfdesktop($width-range: "max") {
  @if $width-range =="max" {
    @media screen and (max-width: $width-large) {
      @content;
    }
  }

  @else {
    @media screen and (min-width: $width-large) {
      @content;
    }
  }
}

@mixin half($width-range: "max") {
  @if $width-range =="max" {
    @media screen and (max-width: $width-medium) {
      @content;
    }
  }

  @else {
    @media screen and (min-width: $width-medium) {
      @content;
    }
  }
}

@mixin halfmobile($width-range: "max") {
  @if $width-range =="max" {
    @media screen and (max-width: $width-small) {
      @content;
    }
  }

  @else {
    @media screen and (min-width: $width-small) {
      @content;
    }
  }
}

@mixin mobile($width-range: "max") {
  @if $width-range =="max" {
    @media screen and (max-width: $width-extrasmall) {
      @content;
    }
  }

  @else {
    @media screen and (min-width: $width-extrasmall) {
      @content;
    }
  }
}

@mixin animate($animation, $duration, $method, $times) {
  animation: $animation $duration $method $times;
}

@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

@function getValue($props, $values, $search) {
  $n1: index($props, $search);
  $n2: index($values, $search);

  @if($n1) {
    @return nth($values, $n1);
  }

  @else {
    @return nth($props, $n2);
  }
}