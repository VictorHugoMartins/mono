[DATABASE]
# ------------------------------------------------------------------------
# The database is a PostgreSQL database, and these are the standard
# connection parameters.
# ------------------------------------------------------------------------
# The host is the machine name for the connection
# ------------------------------------------------------------------------

db_host = localhost
# db_host = localhost

# ------------------------------------------------------------------------
# The port number (PostgreSQL default port is 5432)
# ------------------------------------------------------------------------

db_port = 5432

# ------------------------------------------------------------------------
# A PostgreSQL database server may host multiple databases. 
# Specify the database you are using here.
# ------------------------------------------------------------------------

db_name = airbnb

# ------------------------------------------------------------------------
# Database user, which must have sufficient permissions for
# whatever operations you are carrying out
# ------------------------------------------------------------------------

db_user = postgres

# ------------------------------------------------------------------------
# password
# ------------------------------------------------------------------------

db_password = Airbnb22

# If you are using a set of proxies, supply a comma-separated list of
# host:port pairs here. You can split the list over multiple lines
# and leave whitespace at the beginning of the line, like this:
#
# proxy_list=n.nn.nn.nn:12345,
#            n.nn.nn.mm:12345
#
proxy_list = host1:port1,host2:port2


[NETWORK]
# ------------------------------------------------------------------------
# Network parameters control the behaviour of the script when accessing
# the Airbnb website.
# ------------------------------------------------------------------------
# If you are using a set of proxies, supply a comma-separated list of 
# host:port pairs here. You can split the list over multiple lines if you
# wish.
# ------------------------------------------------------------------------

proxy_list = 45.70.63.89:49007,
            138.204.179.162:44088,
            187.111.192.202:54506,
            201.62.56.49:35816,
            186.232.15.9:45849,
            138.118.224.36:41377,
            186.229.25.18:8080,
            179.180.51.185:8080,
            179.83.32.52:8081,
            177.137.125.45:8080,
            200.7.127.64:8080,
            187.120.253.119:30181,
            45.70.60.73 49007,
            131.0.87.225:33257,
            200.150.86.130:3128,
            179.127.241.151:59477,
            45.235.86.1:51996,
            189.14.193.242:53281,
            45.70.63.77:49007,
            189.5.224.17:3128,
            190.122.186.194 8080,
            182.52.74.76:34084,
            162.159.248.7:80,
            162.159.242.97:80,
            162.159.242.36:80,
            162.159.242.227:80,
            162.159.250.145:80,
            109.248.62.207:47277,
            159.138.1.185:80,
            117.58.241.164:52636,
            103.194.192.29:31937,
            5.23.103.98:45996,
            125.25.165.106:43730,
            103.243.132.58:60356,
            81.16.10.141:30603,
            41.180.65.27:53116,
            80.237.20.20:52790,
            118.174.196.112:36314,
            200.255.122.170:8080,
            77.94.144.164:3128,
            202.169.38.198:56154,
            103.22.248.59:61661,
            103.79.155.42:46977,
            180.252.181.2:80,
            149.28.180.233:8081,
            85.10.219.98:1080,
            111.118.128.140:41344

# ------------------------------------------------------------------------
# A user agent string is used to identify the program making the request
# As the user agent string can contain commas, the separator is a double comma: ",,"
# Each user agent string should also be enclosed in double quotes.
# ------------------------------------------------------------------------

user_agent_list = "Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) like Gecko",,
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A",,
    "Mozilla/5.0 (compatible; MSIE 10.0; Macintosh; Intel Mac OS X 10_7_3; Trident/6.0)",,
    "Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0;  rv:11.0) like Gecko",,
    "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36",,
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36",,
    "Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.2309.372 Safari/537.36",,
    "Mozilla/5.0 (compatible; MSIE 10.6; Windows NT 6.1; Trident/5.0; InfoPath.2; SLCC1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 2.0.50727) 3gpp-gba UNTRUSTED/1.0",,
    "Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5355d Safari/8536.25",,
    "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.517 Safari/537.36"
    
    # "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36",,
    # "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/534.55.3 (KHTML, like Gecko) Version/5.1.3 Safari/534.53.10",,

# ------------------------------------------------------------------------
# How many times to try connecting to the Airbnb site before failing
# ------------------------------------------------------------------------

max_connection_attempts = 100

# ------------------------------------------------------------------------
# Be nice: pause between requests. This is a number of seconds,
# but the pause is a random number in the interval [0, request_sleep]
# ------------------------------------------------------------------------

request_sleep = 0.5

# ------------------------------------------------------------------------
# how long to wait before failing on an individual request
# ------------------------------------------------------------------------

http_timeout = 10.0

# ------------------------------------------------------------------------
# The root API for searches
# ------------------------------------------------------------------------

url_api_search_root = https://www.airbnb.com/api/v2/explore_tabs

# ------------------------------------------------------------------------
# API Key
# To collect an API key using Chrome as your browser:
# - In your browser, go to the Airbnb web site 
# - From the menu button at the top right, open More Tools >  Developer Tools
# - Click the Network tab
# - In the Developer Tools, click the stop sign to clear the list of requests
# - Click XHR (this is the kind of event we want)
# - Move the map to generate a new search
# - Find a request with explore_tabs in the name, right click it to show
#   the URL in a new pane.
# - Find the key= part of the URL and add it here
# ------------------------------------------------------------------------

api_key = d306zoyjsyarp7ifhu67rjxn52tv0t20

# ------------------------------------------------------------------------
# Client Session ID
# From what I can see, this can be left as empty
# ------------------------------------------------------------------------

client_session_id = 


[SURVEY]
# ------------------------------------------------------------------------
# These don't often need to be changed
# ------------------------------------------------------------------------

fill_max_room_count = 50000

# ------------------------------------------------------------------------
# For the special case of doing a global sample of Airbnb listings, room
# values are chosen at random for a range with this as the maximum.
# For other searches, this value is not needed.
# ------------------------------------------------------------------------

room_id_upper_bound = 20000000

# ------------------------------------------------------------------------
# Maximum number of pages to loop over in search, 
# for a given area, room_type, and number of guests
# search_max_pages = 10
# ------------------------------------------------------------------------

search_max_pages = 50

# ------------------------------------------------------------------------
# Maximum number of guests in search
# If set to 1 (recommended), searches will not include a "guests" parameter
# ------------------------------------------------------------------------

search_max_guests = 10

# ------------------------------------------------------------------------
# Maximum zoom level for bounding box search
# For search_max_guests = 1 or for larger areas, set to 8
# For search_max_guests > 1 and a city (as opposed to larger area), 
# 6 may be sufficient
# For search_do_loop_over_prices = 0, increase further (eg 12)
# ------------------------------------------------------------------------

# search_max_rectangle_zoom = 6
search_max_rectangle_zoom = 24

# ------------------------------------------------------------------------
# Blur to add to rectangle boundary to avoid gaps
# - as a fraction of the rectangle width
# ------------------------------------------------------------------------

search_rectangle_edge_blur = 0.0

# ------------------------------------------------------------------------
# Set this to zero to not loop over various room types, but look for all
# room types at once.
# ------------------------------------------------------------------------

search_do_loop_over_room_types = 0

# ------------------------------------------------------------------------
# Set this to zero to not loop over various price ranges, but look for all
# prices at once: if you do this, set a high search_max_rectangle_zoom as 
# there will be more listings in any given square
# As of May 2018, this variable is ignored: no loop over prices is done.
# ------------------------------------------------------------------------

search_do_loop_over_prices = 0

# ------------------------------------------------------------------------
# Time to wait, in seconds, when all proxies are used up, before restarting
# ------------------------------------------------------------------------

re_init_sleep_time = 60

[ACCOUNT]
# ------------------------------------------------------------------------
# Google geocoding API key, obtained from 
# https://developers.google.com/maps/documentation/geocoding/start#get-a-key
# ------------------------------------------------------------------------

google_api_key = AIzaSyBuwBZP2awSzxbOfsu0O5iWZlf8m2ilQT8

# ------------------------------------------------------------------------
# End of configuration file
# ------------------------------------------------------------------------


# Exemplo de como executar
# python airbnb.py -asa "Bordeaux"
# python airbnb.py -asv "Bordeaux"
# update search_area set bb_n_lat = 44.92, bb_s_lat = 44.81, bb_e_lng = -0.53, bb_w_lng = -0.64 where name = 'Bordeaux';
# python airbnb.py -sb 1